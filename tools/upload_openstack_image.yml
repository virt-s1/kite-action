---
- hosts: openstack
  gather_facts: no
  become: no
  vars:
    os: "fedora-38"
    arch: "x86_64"
    cloud_profile: "rhos-01"
    image_url:
      fedora-rawhide: https://dl.fedoraproject.org/pub/fedora/linux/development/rawhide/Cloud/x86_64/images
      fedora-eln: https://odcs.fedoraproject.org/composes/production/latest-Fedora-ELN/compose/BaseOS/x86_64/images
      fedora-40: https://dl.fedoraproject.org/pub/fedora/linux/development/40/Cloud/x86_64/images
      fedora-39: https://dl.fedoraproject.org/pub/fedora/linux/releases/39/Cloud/x86_64/images
      fedora-38: https://dl.fedoraproject.org/pub/fedora/linux/releases/38/Cloud/x86_64/images
      fedora-37: https://dl.fedoraproject.org/pub/fedora/linux/releases/37/Cloud/x86_64/images
      centos-stream-9: https://odcs.stream.centos.org/production/latest-CentOS-Stream/compose/BaseOS/x86_64/images
      centos-stream-8: https://odcs.stream.centos.org/stream-8/production/latest-CentOS-Stream/compose/BaseOS/x86_64/images
    images:
      centos-stream-8: edge-centos-stream-8
      centos-stream-9: edge-centos-stream-9
      fedora-37: edge-fedora-37
      fedora-38: edge-fedora-38
      fedora-39: edge-fedora-39
      fedora-40: edge-fedora-40
      fedora-rawhide: edge-fedora-rawhide
      fedora-eln: edge-fedora-eln
    os_distro:
      centos-stream-9: centos
      centos-stream-8: centos
      fedora-37: fedora
      fedora-38: fedora
      fedora-39: fedora
      fedora-40: fedora
      fedora-rawhide: fedora
    os_network:
      rhos-01: "shared_net_9"
      rhos-0x: "shared_net_9"
      rhos-d: "provider_net_shared_2"

  tasks:
    - name: get latest CentOS Stream 9 images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE ">CentOS-Stream-GenericCloud-9-.*.qcow2<" | tr -d '><'
      register: result_file
      when: os == "centos-stream-9"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when: result_file.changed

    - name: get latest CentOS Stream 8 images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE ">CentOS-Stream-GenericCloud-8-.*.qcow2<" | tr -d '><' | tail -1
      register: result_file
      when: os == "centos-stream-8"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when: result_file.changed

    - name: get latest Fedora rawhide eln
      shell: curl -s {{ image_url[os] }}/ | grep -ioE '>Fedora-ELN-Guest-.*.x86_64.qcow2<' | tr -d '><'
      register: result_file
      when: os == "fedora-eln"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when: result_file.changed

    - name: get latest Fedora rawhide images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE '>Fedora-Cloud-Base-Rawhide-.*.x86_64.qcow2<' | tr -d '><'
      register: result_file
      when: os == "fedora-rawhide"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when: result_file.changed

    - name: get latest Fedora 40 images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE '>Fedora-Cloud-Base-40-.*.x86_64.qcow2<' | tr -d '><'
      register: result_file
      when: os == "fedora-40"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when:
        - os == "fedora-40"
        - result_file.changed

    - name: get latest Fedora 39 images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE '>Fedora-Cloud-Base-39-.*.x86_64.qcow2<' | tr -d '><'
      register: result_file
      when: os == "fedora-39"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when:
        - os == "fedora-39"
        - result_file.changed

    - name: get latest Fedora 38 images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE '>Fedora-Cloud-Base-38-.*.x86_64.qcow2<' | tr -d '><'
      register: result_file
      when: os == "fedora-38"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when: result_file.changed

    - name: get latest Fedora 37 images
      shell: curl -s {{ image_url[os] }}/ | grep -ioE '>Fedora-Cloud-Base-37-.*.x86_64.qcow2<' | tr -d '><'
      register: result_file
      when: os == "fedora-37"

    - set_fact:
        image_name: "{{ result_file.stdout }}"
      when: result_file.changed

    - name: download image
      get_url:
        url: "{{ image_url[os] }}/{{ image_name }}"
        dest: /tmp/

    - name: upload tmp image to psi openstack
      openstack.cloud.image:
        cloud: "{{ cloud_profile }}"
        name: "tmp-edge-{{ os }}"
        filename: "/tmp/{{ image_name }}"
        # https://docs.openstack.org/glance/latest/admin/useful-image-properties.html
        properties:
          architecture: x86_64
          os_distro: "{{ os_distro[os] }}"
          hw_rng_model: virtio

    # image test
    - block:
        - name: deploy image test instance
          openstack.cloud.server:
            cloud: "{{ cloud_profile }}"
            name: "edge-image-test-{{ os }}"
            image: "tmp-edge-{{ os }}"
            flavor: "ci.standard.large"
            network: "{{ os_network[cloud_profile] }}"
            key_name: rhel-edge
            security_groups: ssh_only
            auto_ip: yes
            config_drive: yes
            wait: yes
            timeout: 600
            userdata: |
              #cloud-config
              packages:
                - python3
                - python3-dnf
              users:
                - default
                - name: admin
                  gecos: Administrator
                  groups: users,wheel
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh_authorized_keys:
                    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzxo5dEcS+LDK/OFAfHo6740EyoDM8aYaCkBala0FnWfMMTOq7PQe04ahB0eFLS3IlQtK5bpgzxBdFGVqF6uT5z4hhaPjQec0G3+BD5Pxo6V+SxShKZo+ZNGU3HVrF9p2V7QH0YFQj5B8F6AicA3fYh2BVUFECTPuMpy5A52ufWu0r4xOFmbU7SIhRQRAQz2u4yjXqBsrpYptAvyzzoN4gjUhNnwOHSPsvFpWoBFkWmqn0ytgHg3Vv9DlHW+45P02QH1UFedXR2MqLnwRI30qqtaOkVS+9rE/dhnR+XPpHHG+hv2TgMDAuQ3IK7Ab5m/yCbN73cxFifH4LST0vVG3Jx45xn+GTeHHhfkAfBSCtya6191jixbqyovpRunCBKexI5cfRPtWOitM3m7Mq26r7LpobMM+oOLUm4p0KKNIthWcmK9tYwXWSuGGfUQ+Y8gt7E0G06ZGbCPHOrxJ8lYQqXsif04piONPA/c9Hq43O99KPNGShONCS9oPFdOLRT3U= ostree-image-test
          register: instance_result

        - set_fact:
            instance_ip_addr: "{{ instance_result.server.addresses.shared_net_9[0].addr }}"
          when: cloud_profile == "rhos-01" or cloud_profile == "rhos-0x"

        - set_fact:
            instance_ip_addr: "{{ instance_result.server.addresses.provider_net_shared_2[0].addr }}"
          when: cloud_profile == "rhos-d"

        - name: waits until instance is reachable
          wait_for:
            host: "{{ instance_ip_addr }}"
            port: 22
            search_regex: OpenSSH
            delay: 10

        - name: add os instance ip into host group builder
          add_host:
            name: "{{ instance_ip_addr }}"
            groups: guest

        - name: keep private key permission to 600
          file:
            path: "{{ playbook_dir }}/key/ostree_key"
            mode: "0600"

        - name: ensure cloud-init has finished
          raw: test -f /var/lib/cloud/instance/boot-finished
          retries: 60
          register: cloud_init_check
          changed_when: false
          until: cloud_init_check is success
          delegate_to: "{{ instance_ip_addr }}"

        # https://cloudinit.readthedocs.io/en/latest/topics/modules.html#growpart
        # 10G image will be resized to 40G (disk size)
        - name: disk growpart feature checking
          command: df -h
          become: yes
          register: result_growpart
          delegate_to: "{{ instance_ip_addr }}"

        - name: disk growpart not support
          fail:
            msg: "can't find disk growpart support, edge image {{ os }} {{ arch }} fail"
          when:
            # 60G is for CentOS Streram
            - "'60G' not in result_growpart.stdout"
            # 59G is for fedora
            - "'59G' not in result_growpart.stdout"

      rescue:
        - name: remove tmp image
          openstack.cloud.image:
            cloud: "{{ cloud_profile }}"
            name: "tmp-edge-{{ os }}"
            state: absent

        - name: "building {{ os }} openstack image fail"
          fail:
            msg: "building {{ os }} openstack image fail"

      always:
        - name: remove image test instance
          openstack.cloud.server:
            cloud: "{{ cloud_profile }}"
            name: "edge-image-test-{{ os }}"
            state: absent

        - name: delete tested tmp image
          openstack.cloud.image:
            cloud: "{{ cloud_profile }}"
            name: "tmp-edge-{{ os }}"
            state: absent

    - name: "delete last {{ os }} openstack image"
      openstack.cloud.image:
        cloud: "{{ cloud_profile }}"
        name: edge-{{ os }}
        state: absent

    - name: "upload new {{ os }} openstack image to psi"
      openstack.cloud.image:
        cloud: "{{ cloud_profile }}"
        name: "edge-{{ os }}"
        filename: "/tmp/{{ image_name }}"
        # https://docs.openstack.org/glance/latest/admin/useful-image-properties.html
        properties:
          architecture: x86_64
          os_distro: "{{ os_distro[os] }}"
          hw_rng_model: virtio
      register: result_image
